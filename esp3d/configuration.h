// This file was generated by ESP3D-Configurator V1.0.0-a22 
/*
  configuration.h - ESP3D configuration file

  Copyright (c) 2014 Luc Lebosse. All rights reserved.

  This code is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This code is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with This code; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
#ifndef _CONFIGURATION_H
#define _CONFIGURATION_H
//Setup station as default, use AP mode first if not done
//Note: need both defined to enable it
//Uncomment and edit them to define
#define STATION_WIFI_SSID "XEIC-4036"
#define STATION_WIFI_PASSWORD "h3534hrpup"

//You can also use a different config file for SSID/password
//Just save it in same location as this configuration.h
//This file is ignored by github
#if defined __has_include
#  if __has_include ("myconfig.h")
#    include "myconfig.h"
#  endif
#endif


/************************************
*
* Board description
*
* ESP Board  using ESP3D firmware
*
************************************/
// MCU=ESP32-S3
// ESP flash size=8MB
// Form factor=Original (all pins)

/************************************
*
* Serial Communications
*
* Settings and protocols
*
************************************/

// Serial Communication protocol
// Basic serial protocol, without data change
#define COMMUNICATION_PROTOCOL RAW_SERIAL

// Serial port
#define ESP_SERIAL_OUTPUT USE_SERIAL_0

// Serial buffer size
// 512 Bytes
// Maximum size of the serial buffer
#define SERIAL_RX_BUFFER_SIZE 512

/************************************
*
* Target firmware
*
* Targeted firmware that ESP3D will communicate with
*
************************************/
// System type=3D printer

// Target firmware
// Marlin 2.x firmware
#define DEFAULT_FW MARLIN

/************************************
*
* Radio mode of ESP3D
*
* The radio mode ESP3D communicate with the network
*
************************************/

// Use WiFi 
// Enable wifi communications
#define WIFI_FEATURE 

/************************************
*
* Channels of ESP3D
*
* The way ESP3D communicate
*
************************************/

// Use webserver
// Enable http server
#define HTTP_FEATURE 

// Use telnet server
// Enable telnet light (raw tcp) communications
#define TELNET_FEATURE 

/************************************
*
* Discovery methods of ESP3D
*
* The discovery methods of ESP3D
*
************************************/

// Use mDNS discovery
// This method need `bonjour` protocol on windows, or `avahi` on linux
#define MDNS_FEATURE 

/************************************
*
* Flash filesystem
*
* Filesystem on flash
*
************************************/

// File system type
// LittleFS
// Type of file system used by ESP3D to store files
#define FILESYSTEM_FEATURE ESP_LITTLEFS_FILESYSTEM

/************************************
*
* SD filesystem
*
* Filesystem on SD card
*
************************************/

// SD card connection
// Only your ESP board is connected to SDCard
// Does your system has SD card and how it is connected to your ESP3D
#define SD_DEVICE_CONNECTION ESP_DIRECT_SD

// SD card library
// Used by SDMMC
#define SD_DEVICE ESP_SDIO

// Sdio bit mode
// 4 bits
#define SDIO_BIT_MODE SD_FOUR_BIT_MODE

/************************************
*
* SD card pins
*
* SD card pins
*
************************************/

// SDIO card clk pin
// The clk pin used by SD card in SDIO mode
#define ESP_SDIO_CLK_PIN 14

// SDIO card cmd pin
// The cmd pin used by SD card in SDIO mode
#define ESP_SDIO_CMD_PIN 15

// SDIO card data 0 pin
// The d0 pin used by SD card in SDIO mode
#define ESP_SDIO_D0_PIN 2

// SDIO card data 1 pin
// The d1 pin used by SD card in SDIO mode
#define ESP_SDIO_D1_PIN 4

// SDIO card data 2 pin
// The d2 pin used by SD card in SDIO mode
#define ESP_SDIO_D2_PIN 13

// SDIO card data 3 pin
// The d3 pin used by SD card in SDIO mode
#define ESP_SDIO_D3_PIN 12

/************************************
*
* Remote access
*
* Remote filesystem access
*
************************************/

// WebDav access
// ESP3D SD
// Use WebDav to access to your filesystem
#define WEBDAV_FEATURE FS_SD

/************************************
*
* Update ESP3D
*
* Update ESP3D firmware
*
************************************/

// Enable Web Update
// Update firmware using WebUI
#define WEB_UPDATE_FEATURE 

/************************************
*
* Display settings
*
* Rendering screens
*
************************************/

// Printer screen
// Your printer has a display
#define PRINTER_HAS_DISPLAY 

/************************************
*
* Levels of security
*
* How commands are allowed to be sent to ESP3D
*
************************************/

// Enable serial commands
// Allow commands to be sent to ESP3D via serial port
#define SERIAL_COMMAND_FEATURE 

/************************************
*
* Additional features
*
* Extra settings
*
************************************/

// Enable direct control pin
// Controls pins using [ESP201]
#define DIRECT_PIN_FEATURE 

/************************************
*
* Scripting settings
*
* Scripting on ESP3D
*
************************************/

// Enable Autostart script
// Commands
// Automaticaly launch script when ESP3D is started
#define AUTOSTART_SCRIPT_FEATURE "script"

// Commands to run on startup
// Separate commands with ';'
#define ESP_AUTOSTART_SCRIPT "M155 S3 C5"

/************************************
*
* Default settings for ESP3D
*
* Do not edit them
*
************************************/

// Gcode Host Feature
// This feature allows to process Gcode files like macros.
#define GCODE_HOST_FEATURE 

// Settings location
// EEPROM
// Location where ESP3D will save settings
#define ESP_SAVE_SETTINGS SETTINGS_IN_EEPROM

// Add serial task
// ESP32 need to add a task to handle serial communication
#define SERIAL_INDEPENDANT_TASK 



/************************************
*
* Development setting 
* Do not modify them for production 
************************************/

//Enable debug mode
//Do not do this when connected to printer !!!
//be noted all upload may failed if enabled
//DEBUG_OUTPUT_SERIAL0
//DEBUG_OUTPUT_SERIAL1
//DEBUG_OUTPUT_SERIAL2
//DEBUG_OUTPUT_TELNET
//DEBUG_OUTPUT_WEBSOCKET
//#define ESP_DEBUG_FEATURE DEBUG_OUTPUT_TELNET

#ifdef ESP_DEBUG_FEATURE
#define DEBUG_BAUDRATE 115200
#define DEBUG_ESP3D_OUTPUT_PORT  8000
#endif //ESP_DEBUG_FEATURE

//Enable benchmark report in dev console
//#define ESP_BENCHMARK_FEATURE

//Disable sanity check at compilation
//#define ESP_NO_SANITY_CHECK


/************************************
*
* Sanity checks 
* Do not modify 
************************************/

#if defined (SD_TIMESTAMP_FEATURE) || defined (FILESYSTEM_TIMESTAMP_FEATURE)
    #define TIMESTAMP_FEATURE
#endif //SD_TIMESTAMP_FEATURE || FILESYSTEM_TIMESTAMP_FEATURE 

#if defined(PRINTER_HAS_DISPLAY)
#define HAS_SERIAL_DISPLAY ""
#endif // PRINTER_HAS_DISPLAY

#if defined(CAMERA_DEVICE)
#if CAMERA_DEVICE==CAMERA_MODEL_ESP32_CAM_BOARD || CAMERA_DEVICE==CAMERA_MODEL_ESP32S2_CAM_BOARD
#define USE_BOARD_HEARDER 1
#endif // CAMERA_DEVICE==CAMERA_MODEL_ESP32_CAM_BOARD || CAMERA_DEVICE==CAMERA_MODEL_ESP32S2_CAM_BOARD
#endif // CAMERA_DEVICE

#if !defined(WIFI_FEATURE) && !defined(ETH_FEATURE)
#undef HTTP_FEATURE
#undef TELNET_FEATURE
#undef WEBDAV_FEATURE
#undef FTP_FEATURE
#undef WEB_UPDATE_FEATURE
#undef CAPTIVE_PORTAL_FEATURE
#undef SSDP_FEATURE
#undef MDNS_FEATURE
#undef NOTIFICATION_FEATURE
#endif

#endif //_CONFIGURATION_H
